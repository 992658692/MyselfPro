<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:cache="http://www.springframework.org/schema/cache" 
	xmlns:task="http://www.springframework.org/schema/task" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:redisson="http://redisson.org/schema/redisson"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://code.alibabatech.com/schema/dubbo  http://code.alibabatech.com/schema/dubbo/dubbo.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://redisson.org/schema/redisson http://redisson.org/schema/redisson/redisson.xsd">

	<!-- redis参数设置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大连接数 -->
		<property name="maxTotal" value=""></property>
		<!-- 获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常, 小于零:阻塞不确定的时间,  默认-1 -->
		<property name="maxWaitMillis" value=""></property>
		<!-- 最大空闲连接数, 默认8个 -->
		<property name="maxIdle" value=""></property>
		<!-- 逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1 -->
		<property name="timeBetweenEvictionRunsMillis" value=""></property>
		<!-- 对象空闲多久后逐出, 当空闲时间>该值 且 空闲连接>最大空闲数 时直接逐出,不再根据MinEvictableIdleTimeMillis判断  (默认逐出策略)-->
		<property name="minEvictableIdleTimeMillis" value=""></property>
		<!-- 在获取连接的时候检查有效性, 默认false -->
		<property name="testOnBorrow" value=""></property>
	</bean>
	
	<!-- redis连接配置 -->
	<!-- p:xx 也是一种属性的装配方式，该方式可以减少<property>的数量
		只需要一个p:xx 以p-开头 去定义一个属性即可。而当要引用某个bean时
		只需要以p:xx-ref的形式即可，以p:开头 -ref结尾来告知spring应该
		装配一个引用。
		使用条件：在beans中生命xmlns:p = "http://www.springframework.org/schema/p" -->
	<bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:use-pool="true" p:pool-config-ref="jedisPoolConfig" p:host-name="" p:port="" p:timeout="" p:password=""
		p:database=""/>
	
	<!-- 针对redis的连接 定位对应的redis 对key和value做序列化操作 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" 
		p:connection-factory-ref="redisConnectionFactory" p:enableDefaultSerializer="false">
		<property name="keySerializer">
            <bean class="com.qianmi.framework.cache.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
        <property name="hashKeySerializer">
            <bean class="com.qianmi.framework.cache.StringRedisSerializer" />
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
	</bean>
	
	<!-- redis 任务调度中心 -->
	<bean id = "executor-service" class = "com.blog.mian.RScheduledExecutorServiceFactory" 
		p:host-name="${redis.hostName}" p:port="${redis.port}" p:password="${redis.password}" 
		p:db-index="${redis.dbIndex}"/>
	
	
</beans>